#!/usr/bin/env bash

error() {
    echo "$1"
    exit 1
}

initconf() {
    source ~/.config/ezgpg/config
}

wizard() {
    echo "Welcome to ezgpg config wizard."

    read -p "What is your gpg key id? [ex: rootww]: " keyid

    if ! [[ -d "$HOME/.config/ezgpg" ]]; then
        mkdir -p ~/.config/ezgpg
    fi

    echo "keyid=$keyid" > ~/.config/ezgpg/config
}

gpg_encrypt() {
    if [[ -z "$1" ]]; then
        error "Usage: ezgpg encrypt [filename]"
    fi

    FILE="$1"
    if ! [[ -f "$FILE" ]]; then
        error "File $FILE does not exist."
    fi

    gpg --output "$FILE.enc" --recipient "$keyid" --encrypt "$FILE"

    if [[ $? == 0 ]]; then
        echo "Encryption successful: $FILE.enc"
    else
        error "Error during encryption."
    fi
}

gpg_decrypt() {
    if [[ -z "$1" ]]; then
        error "Usage: ezgpg decrypt [filename]"
    fi

    encrypted_file="$1"

    if ! [[ -f "$encrypted_file" ]]; then
        error "File $encrypted_file does not exist."
    fi

    if [[ "$encrypted_file" == *.enc ]]; then
        output_file="${encrypted_file%.enc}"
    else
        output_file="${encrypted_file}.out"
    fi

    if [[ -e "$output_file" ]]; then
        rm "$output_file"
    fi

    gpg --output "$output_file" --decrypt "$encrypted_file"

    if [[ $? == 0 ]]; then
        echo "Decryption successful: $output_file"
    else
        error "Error during decryption."
    fi
}

main() {
    if ! [[ -f "$HOME/.config/ezgpg/config" ]]; then
        wizard
    else
        initconf
    fi

    if [[ "$1" == "encrypt" ]]; then
        gpg_encrypt "$2"
    elif [[ "$1" == "decrypt" ]]; then
        gpg_decrypt "$2"
    else
        error "Usage: ezgpg [encrypt|decrypt] [filename]"
    fi
}

main "$@"
